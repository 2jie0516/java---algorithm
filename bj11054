import java.util.Arrays;
import java.util.Scanner;

import static java.lang.Math.max;
import static java.lang.Math.min;


public class Main {

    static long[][] dp;
    static long[] value;
    static int size;

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        size = sc.nextInt();
        dp = new long[3][size];
        value = new long[size];

        for (int i = 0; i < size; i++) {
            value[i] = sc.nextInt();
        }
        dp[0][0] =  1;

        for (int i = 1; i < size; i++) {
            dp_ascending(i);
        }
        for (int i = size-1; i >= 0; i--) {
            dp_descending(i);
        }

        for (int i = 0; i < size; i++) {
            dp(i);

        }

        long result = 0;
        for(int i=0;i<size;i++){
            result = max(result,dp[2][i]);
        }
        System.out.println(result);

    }

    static long dp(int num) {
        long seq = dp[0][num];
        for (int i = size-1; i > num; i--) {
            if (value[i] < value[num] && seq < dp[1][i] + dp[0][num]){

                seq = dp[1][i] + dp[0][num];
            }
        }
        dp[2][num] = seq;

        return seq;
    }

    static long dp_ascending(int num) {
        long seq = 1;
        for (int i = 0; i < num; i++) {
            if (value[i] < value[num] && seq < dp[0][i] + 1){
                seq = dp[0][i] + 1;
            }
        }
        dp[0][num] = seq;


        return seq;
    }

    static long dp_descending(int num) {
        long seq = 1;
        for (int i = size-1; i > num; i--) {
            if (value[i] < value[num] && seq < dp[1][i] + 1){
                seq = dp[1][i] + 1;

            }
        }
        dp[1][num] = seq;

        return seq;
    }

}
