import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;


public class Main {
    static int num;
    static int[][] arr;
    static boolean[] team;
    static int min = Integer.MAX_VALUE;
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        num = Integer.parseInt(br.readLine());
        arr = new int[num][num];
        team = new boolean[num];

        for (int i = 0; i < num; i++) {
            StringTokenizer st = new StringTokenizer(br.readLine());

            for (int j = 0; j < num; j++) {
                arr[i][j] = Integer.parseInt(st.nextToken());
            }
        }
        dfs();

        System.out.println(min);
    }

    static void dfs() {
        for (int i = 0; i < (1 << num) ; i++) {
            int cnt = 0;
            team = new boolean[num];
            for (int j = 0; j < num; j++) {
                if ((i & (1 << j)) != 0) {
                    team[j] = true;
                    cnt++;
                }
            }
            if (cnt == num / 2) cal();


        }
    }

    static void cal() {
        int num1 = 0;
        int num2 = 0;

        for(int i=0;i<num-1;i++){
            for(int j=i+1;j<num;j++){
                if(team[i] == true & team[j] == true){
                    num1 += arr[i][j];
                    num1 += arr[j][i];
                }
                if(team[i] == false & team[j] == false){
                    num2 += arr[i][j];
                    num2 += arr[j][i];
                }
            }

        }


        int result = Math.abs(num1-num2);

        if(result == 0){
            System.out.println(0);
            System.exit(0);
        }

        if(min > result) min = result;
    }

}
