import java.util.Arrays;
import java.util.Scanner;

public class Main {
    static int num;
    static char[][] board;
    static int max = 0;

    public static void find_row() {
        int cnt = 1;
        for (int i = 0; i < num; i++) {
            cnt = 1;
            for (int j = 0; j < num-1; j++) {
                if (board[i][j] == board[i][j + 1]) {
                    cnt++;
                } else {
                    cnt = 1;
                }
                if (max < cnt) max = cnt;
//                System.out.println("----");
//                System.out.println(i);
//                System.out.println(cnt);
            }

        }
    }

    public static void find_column() {
        int cnt = 1;
        for (int i = 0; i < num; i++) {
            cnt = 1;
            for (int j = 0; j < num-1; j++) {
                if (board[j][i] == board[j+1][i]) {
                    cnt++;
                } else {
                    cnt = 1;
                }
                if (max < cnt) max = cnt;
//                System.out.println("**");
//
//                System.out.println(i);
//                System.out.println(cnt);
            }

        }

    }


    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        num = sc.nextInt();
        board = new char[num][num];

        for (int i = 0; i < num; i++) {
            String str = sc.next();
            for (int j = 0; j < num; j++) {
                board[i][j] = str.charAt(j);
            }
        }
        char value;
        for (int i = 0; i < num; i++) {
            for (int j = 0; j < num-1; j++) {
                value = board[i][j];
                board[i][j] = board[i][j + 1];
                board[i][j + 1] = value;

                find_row();
                find_column();

                value = board[i][j];
                board[i][j] = board[i][j + 1];
                board[i][j + 1] = value;

            }

        }
        for (int i = 0; i < num-1; i++) {
            for (int j = 0; j < num; j++) {
                value = board[i][j];
                board[i][j] = board[i+1][j];
                board[i+1][j] = value;

                find_row();
                find_column();

                value = board[i][j];
                board[i][j] = board[i+1][j];
                board[i+1][j] = value;

            }

        }
        System.out.println(max);
    }
}

