import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

import static java.lang.Math.abs;

public class Main {
    static int[][] arr;
    static boolean[] visit;
    static int num;
    static int min = Integer.MAX_VALUE;
    static int cnt =0;
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        num = Integer.parseInt(br.readLine());
        arr = new int[num+1][num+1];
        visit = new boolean[num+1];
        for(int i=1;i<=num;i++){
            StringTokenizer st = new StringTokenizer(br.readLine());
            for(int j=1;j<=num;j++){
                arr[i][j] = Integer.parseInt(st.nextToken());
            }
        }
        for(cnt=2;cnt<=num/2;cnt++){
            dfs(0,1);
        }
        System.out.println(min);
    }

    static void dfs(int depth,int idx) {
        if(cnt == depth){
            cal();
            return;
        }
        for(int i=idx;i<=num;i++){
            if(visit[i] == false){
                visit[i] = true;
                dfs(depth+1,i+1);
                visit[i] = false;
            }
        }
    }

    static void cal(){
        int result1 = 0;
        int result2 = 0;

        for(int i=1;i<=num-1;i++){
            for(int j=i+1;j<=num;j++){
                if(visit[i] == true && visit[j] == true){
                    result1 += arr[i][j];
                    result1 += arr[j][i];
                }
                else if(visit[i] == false && visit[j] == false){
                    result2 += arr[i][j];
                    result2 += arr[j][i];
                }
            }
        }

        if(result1 - result2 == 0){
            System.out.println(0);
            System.exit(0);
        }

        if(min > abs(result1 - result2)) min = abs(result1 - result2);

    }


}
